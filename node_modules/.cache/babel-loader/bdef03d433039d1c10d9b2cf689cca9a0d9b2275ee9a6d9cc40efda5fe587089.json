{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useVideo = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  const handlePause = () => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handlePlay = () => {\n    videoRef.current.play();\n    setIsPlaying(true);\n  };\n  return {\n    videoRef,\n    handlePlay,\n    handlePause,\n    isPlaying,\n    playbackRate,\n    setPlaybackRate,\n    volume,\n    setVolume,\n    currentTime,\n    setCurrentTime\n  };\n};\n_s(useVideo, \"HdZUcFWfztuYWMOTY79IlJnnlNo=\");\nexport default useVideo;","map":{"version":3,"names":["useEffect","useState","useVideo","_s","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","videoRef","current","handlePause","pause","handlePlay","play"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/hooks/useVideo.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useVideo = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  const handlePause = () => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const handlePlay = () => {\n    videoRef.current.play();\n    setIsPlaying(true);\n  };\n\n  return { videoRef, handlePlay, handlePause, isPlaying, playbackRate, setPlaybackRate, volume, setVolume, currentTime, setCurrentTime };\n};\n\nexport default useVideo;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACP,YAAY,GAAGA,YAAY;MAC5CM,QAAQ,CAACC,OAAO,CAACL,MAAM,GAAGA,MAAM;IAClC;EACF,CAAC,EAAE,CAACF,YAAY,EAAEM,QAAQ,EAAEJ,MAAM,CAAC,CAAC;EAEpC,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACE,KAAK,CAAC,CAAC;MACxBV,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBJ,QAAQ,CAACC,OAAO,CAACI,IAAI,CAAC,CAAC;IACvBZ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,OAAO;IAAEO,QAAQ;IAAEI,UAAU;IAAEF,WAAW;IAAEV,SAAS;IAAEE,YAAY;IAAEC,eAAe;IAAEC,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAe,CAAC;AACxI,CAAC;AAACR,EAAA,CA1BID,QAAQ;AA4Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}