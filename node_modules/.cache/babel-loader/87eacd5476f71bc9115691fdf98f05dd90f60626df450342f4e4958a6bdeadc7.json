{"ast":null,"code":"var _jsxFileName = \"/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoFlipper = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  useEffect(() => {\n    if (videoRef.current) {\n      setShowCropper(true);\n    }\n  }, [videoRef]);\n  useEffect(() => {\n    const updatePreview = () => {\n      if (videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n        ctx.drawImage(video, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height);\n      }\n    };\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio]);\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n      setPosition({\n        x: newX,\n        y: newY\n      });\n    }\n  };\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n  const handlePause = videoRef => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handlePlay = videoRef => {\n    if (videoRef.current) {\n      videoRef.current.play();\n      setIsPlaying(true);\n    }\n  };\n  console.log('videoRef main', videoRef);\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video\",\n        ref: videoRef,\n        src: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n        onTimeUpdate: handleTimeUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), showCropper && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"draggable\",\n        ref: cropperRef,\n        className: \"cropper\",\n        style: {\n          top: `${position.y}px`,\n          left: `${position.x}px`,\n          width: getVideoWidth(),\n          height: \"100%\",\n          aspectRatio: aspectRatio\n        },\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 ml-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        style: {\n          aspectRatio: aspectRatio,\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: previewCanvasRef,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: isPlaying ? () => handlePause(videoRef) : () => handlePlay(videoRef),\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: videoRef.current ? videoRef.current.duration : 0,\n        value: currentTime,\n        onChange: e => {\n          videoRef.current.currentTime = e.target.value;\n          setCurrentTime(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: playbackRate,\n        onChange: e => setPlaybackRate(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.5,\n          children: \"0.5x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"1x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1.5,\n          children: \"1.5x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        value: volume,\n        onChange: e => setVolume(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: aspectRatio,\n        onChange: e => setAspectRatio(e.target.value),\n        children: Object.keys(aspectRatios).map(ratio => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ratio,\n          children: ratio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoFlipper, \"cHoin82n3HeWyD8MIBlQrgjg+fU=\");\n_c = VideoFlipper;\nexport default VideoFlipper;\nvar _c;\n$RefreshReg$(_c, \"VideoFlipper\");","map":{"version":3,"names":["useEffect","useRef","useState","aspectRatios","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoFlipper","_s","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","aspectRatio","setAspectRatio","showCropper","setShowCropper","cropperRef","videoRef","previewCanvasRef","position","setPosition","x","y","dragging","setDragging","offset","setOffset","current","updatePreview","video","cropper","canvas","ctx","getContext","cropperRect","getBoundingClientRect","videoRect","scaleX","videoWidth","width","scaleY","videoHeight","height","sourceX","left","sourceY","top","sourceWidth","sourceHeight","drawImage","animationId","requestAnimationFrame","animate","cancelAnimationFrame","handleMouseUp","handleMouseDown","e","clientX","clientY","handleMouseMove","container","box","newX","newY","handleTimeUpdate","handlePause","pause","handlePlay","play","console","log","getVideoWidth","children","className","onMouseMove","onMouseUp","onMouseLeave","ref","src","onTimeUpdate","fileName","_jsxFileName","lineNumber","columnNumber","id","style","onMouseDown","overflow","type","onClick","min","max","duration","value","onChange","target","Number","step","Object","keys","map","ratio","_c","$RefreshReg$"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\n\nconst VideoFlipper = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  \n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      setShowCropper(true);\n    }\n  }, [videoRef]);\n\n  useEffect(() => {\n    const updatePreview = () => {\n      if (videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n\n        ctx.drawImage(\n          video,\n          sourceX, sourceY, sourceWidth, sourceHeight,\n          0, 0, canvas.width, canvas.height\n        );\n      }\n    };\n\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio]);\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n\n      setPosition({ x: newX, y: newY });\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n\n  const handlePause = (videoRef) => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const handlePlay = (videoRef) => {\n    if (videoRef.current) {\n      videoRef.current.play();\n      setIsPlaying(true);\n    }\n  };\n\n  console.log('videoRef main', videoRef)\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`\n  };\n\n  return (\n    <>\n      <div className=\"video-container\" onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}>\n        <video\n          className=\"video\"\n          ref={videoRef}\n          src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n          onTimeUpdate={handleTimeUpdate}\n        />\n        {showCropper && <div\n          id=\"draggable\"\n          ref={cropperRef}\n          className=\"cropper\"\n          style={{\n            top: `${position.y}px`,\n            left: `${position.x}px`,\n            width: getVideoWidth(),\n            height: \"100%\",\n            aspectRatio: aspectRatio,\n          }}\n          onMouseDown={handleMouseDown}\n        />}\n      </div>\n      <div className=\"w-1/3 ml-4\">\n        <div className=\"w-full\" style={{ aspectRatio: aspectRatio, overflow: 'hidden' }}>\n          <canvas\n            ref={previewCanvasRef}\n            className=\"w-full h-full object-cover\"\n          />\n        </div>\n      </div>\n      <div>\n        <button type=\"button\" onClick={isPlaying ? () => handlePause(videoRef) : () => handlePlay(videoRef)}>{isPlaying ? \"Pause\" : \"Play\"}</button>\n        <input type=\"range\" min=\"0\" max={videoRef.current ? videoRef.current.duration : 0} value={currentTime} onChange={(e) => {\n          videoRef.current.currentTime = e.target.value;\n          setCurrentTime(e.target.value);\n        }} />\n        <select value={playbackRate} onChange={(e) => setPlaybackRate(Number(e.target.value))}>\n          <option value={0.5}>0.5x</option>\n          <option value={1}>1x</option>\n          <option value={1.5}>1.5x</option>\n          <option value={2}>2x</option>\n        </select>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={volume}\n          onChange={(e) => setVolume(Number(e.target.value))}\n        />\n        <select value={aspectRatio} onChange={(e) => setAspectRatio(e.target.value)}>\n          {Object.keys(aspectRatios).map((ratio) => (\n            <option value={ratio}>{ratio}</option>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default VideoFlipper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}