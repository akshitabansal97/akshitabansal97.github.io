{"ast":null,"code":"var _jsxFileName = \"/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport RecordedPreview from \"./RecordedPreview\";\nimport Header from \"./header\";\nimport VideoFlipperContext from \"./context\";\nimport Preview from \"./preview\";\nimport Controls from \"./controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFlipper = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('editor');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [duration, setDuration] = useState(0);\n  const [cropperSize, setCropperSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  console.log('recordedData', recordedData);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.addEventListener('loadedmetadata', handleLoadedMetadata);\n      return () => {\n        video.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      };\n    }\n  }, []);\n  const handleLoadedMetadata = () => {\n    setDuration(videoRef.current.duration);\n  };\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  useEffect(() => {\n    const recordData = (\n      // { x = position.x, y = position.y, width = cropperSize.width, height = cropperSize.height, newVolume = volume, newPlaybackRate = playbackRate }\n    ) => {\n      const prevData = [...recordedData];\n      const lastEl = prevData.at(-1);\n      console.log('lastEl', lastEl);\n      const {\n        width,\n        height\n      } = getCropperSize(aspectRatio);\n      console.log('width, height', width, height);\n      const newData = {\n        timeStamp: currentTime,\n        coordinates: [position.x, position.y, width, height],\n        volume,\n        playbackRate\n      };\n      if (lastEl && lastEl.timeStamp === currentTime) {\n        prevData.pop();\n      }\n      setRecordedData([...prevData, newData]);\n    };\n    if (videoRef.current) {\n      recordData();\n    }\n    ;\n  }, [volume, playbackRate, aspectRatio, position.x, position.y, cropperSize.width, cropperSize.height]);\n  useEffect(() => {\n    const updatePreview = () => {\n      if (showCropper && videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n        ctx.drawImage(video, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height);\n      }\n    };\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio, showCropper]);\n  const handleMouseUp = () => {\n    // if (dragging) recordData({ x: position.x, y: position.y });\n    setDragging(false);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n      setPosition({\n        x: newX,\n        y: newY\n      });\n    }\n  };\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n  const getCropperSize = ratio => {\n    const videoHeight = videoRef.current.offsetHeight;\n    console.log('videoRef.current', videoRef.current, videoRef.current.offsetHeight);\n    const newWidth = videoHeight * aspectRatios[ratio];\n    return {\n      width: newWidth,\n      height: videoHeight\n    };\n  };\n  const handleAspectRatioChange = newRatio => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const {\n      width,\n      height\n    } = getCropperSize(newRatio);\n    setCropperSize({\n      width,\n      height\n    });\n  };\n  const handleDownloadJSON = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordedData));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"recorded_data.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`;\n  };\n  const editorUi = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"video\",\n          ref: videoRef,\n          src: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n          onTimeUpdate: handleTimeUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), showCropper && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"draggable\",\n          ref: cropperRef,\n          className: \"cropper\",\n          style: {\n            top: `${position.y}px`,\n            left: `${position.x}px`,\n            width: getVideoWidth(),\n            height: \"100%\",\n            aspectRatio: aspectRatio\n          },\n          onMouseDown: handleMouseDown,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n  const startCropper = () => {\n    setShowCropper(true);\n    const {\n      width,\n      height\n    } = getCropperSize(aspectRatio);\n    console.log(width, height);\n  };\n  const removeCropper = () => {\n    setShowCropper(false);\n  };\n  return /*#__PURE__*/_jsxDEV(VideoFlipperContext.Provider, {\n    value: {\n      activeTab,\n      handleTabClick,\n      videoRef,\n      aspectRatio,\n      previewCanvasRef,\n      showCropper,\n      position,\n      handleTimeUpdate,\n      duration,\n      isPlaying,\n      currentTime,\n      setCurrentTime,\n      playbackRate,\n      setPlaybackRate,\n      volume,\n      setVolume,\n      handleAspectRatioChange,\n      handleDownloadJSON,\n      setIsPlaying,\n      handleMouseUp,\n      handleMouseDown,\n      handleMouseMove\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-top\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          activeTab: activeTab,\n          onTabClick: handleTabClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), activeTab === 'editor' ? editorUi() : /*#__PURE__*/_jsxDEV(RecordedPreview, {\n          recordedData: recordedData,\n          videoSrc: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), activeTab === 'editor' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cropper-bottom-btn ${showCropper && 'cropper-bottom-btn-disabled'}`,\n          type: \"button\",\n          onClick: startCropper,\n          children: \"Start Cropper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cropper-bottom-btn ${!showCropper && 'cropper-bottom-btn-disabled'}`,\n          type: \"button\",\n          onClick: removeCropper,\n          children: \"Remove Cropper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cropper-bottom-btn\",\n          type: \"button\",\n          onClick: handleDownloadJSON,\n          children: \"Generate Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFlipper, \"XAq/tyHfLH9IdHu7ErRN8QKt2PE=\");\n_c = VideoFlipper;\nexport default VideoFlipper;\nvar _c;\n$RefreshReg$(_c, \"VideoFlipper\");","map":{"version":3,"names":["useEffect","useRef","useState","aspectRatios","RecordedPreview","Header","VideoFlipperContext","Preview","Controls","jsxDEV","_jsxDEV","VideoFlipper","_s","activeTab","setActiveTab","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","aspectRatio","setAspectRatio","showCropper","setShowCropper","recordedData","setRecordedData","duration","setDuration","cropperSize","setCropperSize","width","height","cropperRef","videoRef","previewCanvasRef","console","log","position","setPosition","x","y","dragging","setDragging","offset","setOffset","video","current","addEventListener","handleLoadedMetadata","removeEventListener","recordData","prevData","lastEl","at","getCropperSize","newData","timeStamp","coordinates","pop","updatePreview","cropper","canvas","ctx","getContext","cropperRect","getBoundingClientRect","videoRect","scaleX","videoWidth","scaleY","videoHeight","sourceX","left","sourceY","top","sourceWidth","sourceHeight","drawImage","animationId","requestAnimationFrame","animate","cancelAnimationFrame","handleMouseUp","handleMouseDown","e","clientX","clientY","handleMouseMove","container","box","newX","newY","handleTimeUpdate","ratio","offsetHeight","newWidth","handleAspectRatioChange","newRatio","handleDownloadJSON","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleTabClick","tab","getVideoWidth","editorUi","className","children","onMouseMove","onMouseUp","onMouseLeave","ref","src","onTimeUpdate","fileName","_jsxFileName","lineNumber","columnNumber","id","style","onMouseDown","class","startCropper","removeCropper","Provider","value","onTabClick","videoSrc","type","onClick","_c","$RefreshReg$"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport RecordedPreview from \"./RecordedPreview\";\nimport Header from \"./header\";\nimport VideoFlipperContext from \"./context\";\nimport Preview from \"./preview\";\nimport Controls from \"./controls\";\n\nconst VideoFlipper = () => {\n  const [activeTab, setActiveTab] = useState('editor');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [duration, setDuration] = useState(0);\n  const [cropperSize, setCropperSize] = useState({ width: 0, height: 0 });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n\n  console.log('recordedData', recordedData);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.addEventListener('loadedmetadata', handleLoadedMetadata);\n\n      return () => {\n        video.removeEventListener('loadedmetadata', handleLoadedMetadata);\n      };\n    }\n  }, []);\n\n  const handleLoadedMetadata = () => {\n    setDuration(videoRef.current.duration);\n  };\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  useEffect(() => {\n    const recordData = (\n      // { x = position.x, y = position.y, width = cropperSize.width, height = cropperSize.height, newVolume = volume, newPlaybackRate = playbackRate }\n    ) => {\n      const prevData = [...recordedData];\n      const lastEl = prevData.at(-1);\n\n      console.log('lastEl', lastEl);\n      const {width, height} = getCropperSize(aspectRatio);\n      console.log('width, height', width, height)\n      const newData = {\n        timeStamp: currentTime,\n        coordinates: [\n          position.x,\n          position.y,\n          width,\n          height\n        ],\n        volume,\n        playbackRate\n      };\n\n      if (lastEl && lastEl.timeStamp === currentTime) {\n        prevData.pop();\n      }\n\n      setRecordedData([...prevData, newData]);\n    };\n    \n    if (videoRef.current) {\n      recordData();\n    };\n  }, [volume, playbackRate, aspectRatio, position.x, position.y, cropperSize.width, cropperSize.height]);\n\n  useEffect(() => {\n    const updatePreview = () => {\n\n      if (showCropper && videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n\n        ctx.drawImage(\n          video,\n          sourceX, sourceY, sourceWidth, sourceHeight,\n          0, 0, canvas.width, canvas.height\n        );\n      }\n    };\n\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio, showCropper]);\n\n  const handleMouseUp = () => {\n    // if (dragging) recordData({ x: position.x, y: position.y });\n    setDragging(false);\n    \n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n\n      setPosition({ x: newX, y: newY });\n      \n    }\n  };\n\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n\n  const getCropperSize = (ratio) => {\n    const videoHeight = videoRef.current.offsetHeight;\n    console.log('videoRef.current', videoRef.current, videoRef.current.offsetHeight)\n    const newWidth = videoHeight * aspectRatios[ratio];\n\n    return { width: newWidth, height: videoHeight };\n  }\n\n  const handleAspectRatioChange = (newRatio) => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const { width, height } = getCropperSize(newRatio);\n    setCropperSize({ width, height });\n  };\n\n  const handleDownloadJSON = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordedData));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"recorded_data.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`\n  };\n\n  const editorUi = () => (\n    <div className=\"editor-container\">\n      <div className=\"editor\">\n        <div className=\"video-container\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          <video\n            className=\"video\"\n            ref={videoRef}\n            src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n            onTimeUpdate={handleTimeUpdate}\n          />\n          {showCropper && <div\n            id=\"draggable\"\n            ref={cropperRef}\n            className=\"cropper\"\n            style={{\n              top: `${position.y}px`,\n              left: `${position.x}px`,\n              width: getVideoWidth(),\n              height: \"100%\",\n              aspectRatio: aspectRatio,\n            }}\n            onMouseDown={handleMouseDown}\n          >\n            <div class=\"grid-item\"></div>\n            <div class=\"grid-item\"></div>\n            <div class=\"grid-item\"></div>\n            <div class=\"grid-item\"></div>\n            <div class=\"grid-item\"></div>\n            <div class=\"grid-item\"></div>\n          </div>}\n        </div>\n        <Controls />\n      </div>\n      <Preview />\n    </div>\n  );\n\n  const startCropper = () => {\n    setShowCropper(true);\n    const { width, height } = getCropperSize(aspectRatio);\n    console.log(width, height);\n  };\n\n  const removeCropper = () => {\n    setShowCropper(false);\n  };\n\n  return (\n    <VideoFlipperContext.Provider value={{ \n      activeTab,\n      handleTabClick,\n      videoRef,\n      aspectRatio,\n      previewCanvasRef,\n      showCropper,\n      position,\n      handleTimeUpdate,\n      duration, \n      isPlaying, currentTime, setCurrentTime, playbackRate, setPlaybackRate, volume, setVolume, handleAspectRatioChange, handleDownloadJSON, setIsPlaying, handleMouseUp, handleMouseDown, handleMouseMove\n    }}>\n      <div className=\"cropper-container\">\n        <div className=\"cropper-top\">\n          <Header activeTab={activeTab} onTabClick={handleTabClick} />\n          {activeTab === 'editor' ? editorUi() : <RecordedPreview recordedData={recordedData} videoSrc={\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"} />}\n        </div>\n        {activeTab === 'editor' && <div className=\"cropper-bottom\">\n          <div className={`cropper-bottom-btn ${showCropper && 'cropper-bottom-btn-disabled'}`} type=\"button\" onClick={startCropper}>Start Cropper</div>\n          <div className={`cropper-bottom-btn ${!showCropper && 'cropper-bottom-btn-disabled'}`} type=\"button\" onClick={removeCropper}>Remove Cropper</div>\n          <div className=\"cropper-bottom-btn\" type=\"button\" onClick={handleDownloadJSON}>Generate Preview</div>\n        </div>}\n        \n      </div>\n    </VideoFlipperContext.Provider>\n  );\n};\n\nexport default VideoFlipper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}