{"ast":null,"code":"var _jsxFileName = \"/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoFlipper = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const videoRef = useRef(null);\n  const handlePause = () => {\n    videoRef.current.pause();\n    setIsPlaying(false);\n  };\n  const handlePlay = () => {\n    videoRef.current.play();\n    setIsPlaying(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      width: \"320\",\n      height: \"180\",\n      ref: videoRef,\n      className: \"w-full\",\n      src: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: isPlaying ? handlePause : handlePlay,\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: videoRef.current ? videoRef.current.duration : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: playbackRate,\n        onChange: e => setPlaybackRate(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.5,\n          children: \"0.5x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"1x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1.5,\n          children: \"1.5x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"10x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\"\n        // value={volume}\n        // onChange={(e) => handleVolumeChange(Number(e.target.value))}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoFlipper, \"gGBGkxhwyTbPW/R5wiu8uxtc3Ek=\");\n_c = VideoFlipper;\nexport default VideoFlipper;\nvar _c;\n$RefreshReg$(_c, \"VideoFlipper\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoFlipper","_s","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","videoRef","handlePause","current","pause","handlePlay","play","children","width","height","ref","className","src","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","min","max","duration","value","onChange","e","Number","target","step","_c","$RefreshReg$"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst VideoFlipper = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const videoRef = useRef(null);\n\n  const handlePause = () => {\n    videoRef.current.pause();\n    setIsPlaying(false);\n  };\n\n  const handlePlay = () => {\n    videoRef.current.play();\n    setIsPlaying(true);\n  };\n\n  \n  return (\n    <>\n      <video\n        width=\"320\"\n        height=\"180\"\n        ref={videoRef}\n        className=\"w-full\"\n        src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n      />\n      {/* Add video controls */}\n      <div>\n        <button type=\"button\" onClick={isPlaying ? handlePause : handlePlay}>{isPlaying ? \"Pause\" : \"Play\"}</button>\n        <input type=\"range\" min=\"0\" max={videoRef.current ? videoRef.current.duration : 0}/>\n        <select value={playbackRate} onChange={(e) => setPlaybackRate(Number(e.target.value))}>\n          <option value={0.5}>0.5x</option>\n          <option value={1}>1x</option>\n          <option value={1.5}>1.5x</option>\n          <option value={2}>2x</option>\n          <option value={10}>10x</option>\n        </select>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          // value={volume}\n          // onChange={(e) => handleVolumeChange(Number(e.target.value))}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default VideoFlipper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}