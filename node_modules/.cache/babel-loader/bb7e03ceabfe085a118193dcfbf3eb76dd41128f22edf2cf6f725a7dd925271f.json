{"ast":null,"code":"var _jsxFileName = \"/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoFlipper = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [cropperSize, setCropperSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  useEffect(() => {\n    if (videoRef.current) {\n      setShowCropper(true);\n    }\n  }, [videoRef]);\n  useEffect(() => {\n    const updatePreview = () => {\n      if (videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n        ctx.drawImage(video, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height);\n      }\n    };\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio]);\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n  };\n  const recordData = () => {\n    const newData = {\n      timeStamp: currentTime,\n      coordinates: [position.x, position.y, cropperSize.width, cropperSize.height],\n      volume,\n      playbackRate\n    };\n    setRecordedData(prevData => [...prevData, newData]);\n  };\n  console.log('recordedData', recordedData);\n  const handleMouseMove = e => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n      setPosition({\n        x: newX,\n        y: newY\n      });\n      recordData();\n    }\n  };\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n  const handlePause = videoRef => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n  const handlePlay = videoRef => {\n    if (videoRef.current) {\n      videoRef.current.play();\n      setIsPlaying(true);\n    }\n  };\n  console.log('videoRef main', videoRef);\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`;\n  };\n  const handleAspectRatioChange = newRatio => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const videoHeight = videoRef.current.offsetHeight;\n    const newWidth = videoHeight * aspectRatios[newRatio];\n    setCropperSize({\n      width: newWidth,\n      height: videoHeight\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video\",\n        ref: videoRef,\n        src: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n        onTimeUpdate: handleTimeUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), showCropper && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"draggable\",\n        ref: cropperRef,\n        className: \"cropper\",\n        style: {\n          top: `${position.y}px`,\n          left: `${position.x}px`,\n          width: getVideoWidth(),\n          height: \"100%\",\n          aspectRatio: aspectRatio\n        },\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: isPlaying ? () => handlePause(videoRef) : () => handlePlay(videoRef),\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: videoRef.current ? videoRef.current.duration : 0,\n        value: currentTime,\n        onChange: e => {\n          videoRef.current.currentTime = e.target.value;\n          setCurrentTime(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: playbackRate,\n        onChange: e => setPlaybackRate(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.5,\n          children: \"0.5x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"1x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1.5,\n          children: \"1.5x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        value: volume,\n        onChange: e => setVolume(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: aspectRatio,\n        onChange: e => handleAspectRatioChange(e.target.value),\n        children: Object.keys(aspectRatios).map(ratio => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ratio,\n          children: ratio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 ml-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        style: {\n          aspectRatio: aspectRatio,\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: previewCanvasRef,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoFlipper, \"DfnHuvti1+TqhZh3WR0N0QWO+1s=\");\n_c = VideoFlipper;\nexport default VideoFlipper;\nvar _c;\n$RefreshReg$(_c, \"VideoFlipper\");","map":{"version":3,"names":["useEffect","useRef","useState","aspectRatios","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoFlipper","_s","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","aspectRatio","setAspectRatio","showCropper","setShowCropper","recordedData","setRecordedData","cropperSize","setCropperSize","width","height","cropperRef","videoRef","previewCanvasRef","position","setPosition","x","y","dragging","setDragging","offset","setOffset","current","updatePreview","video","cropper","canvas","ctx","getContext","cropperRect","getBoundingClientRect","videoRect","scaleX","videoWidth","scaleY","videoHeight","sourceX","left","sourceY","top","sourceWidth","sourceHeight","drawImage","animationId","requestAnimationFrame","animate","cancelAnimationFrame","handleMouseUp","handleMouseDown","e","clientX","clientY","recordData","newData","timeStamp","coordinates","prevData","console","log","handleMouseMove","container","box","newX","newY","handleTimeUpdate","handlePause","pause","handlePlay","play","getVideoWidth","handleAspectRatioChange","newRatio","offsetHeight","newWidth","children","className","onMouseMove","onMouseUp","onMouseLeave","ref","src","onTimeUpdate","fileName","_jsxFileName","lineNumber","columnNumber","id","style","onMouseDown","type","onClick","min","max","duration","value","onChange","target","Number","step","Object","keys","map","ratio","overflow","_c","$RefreshReg$"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\n\nconst VideoFlipper = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [cropperSize, setCropperSize] = useState({ width: 0, height: 0 });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      setShowCropper(true);\n    }\n  }, [videoRef]);\n\n  useEffect(() => {\n    const updatePreview = () => {\n      if (videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n\n        ctx.drawImage(\n          video,\n          sourceX, sourceY, sourceWidth, sourceHeight,\n          0, 0, canvas.width, canvas.height\n        );\n      }\n    };\n\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio]);\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const recordData = () => {\n    const newData = {\n      timeStamp: currentTime,\n      coordinates: [\n        position.x,\n        position.y,\n        cropperSize.width,\n        cropperSize.height\n      ],\n      volume,\n      playbackRate\n    };\n    setRecordedData(prevData => [...prevData, newData]);\n  };\n\n  console.log('recordedData', recordedData);\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n\n      setPosition({ x: newX, y: newY });\n      recordData();\n      \n    }\n  };\n\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n\n  const handlePause = (videoRef) => {\n    if (videoRef.current) {\n      videoRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  const handlePlay = (videoRef) => {\n    if (videoRef.current) {\n      videoRef.current.play();\n      setIsPlaying(true);\n    }\n  };\n\n  console.log('videoRef main', videoRef)\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`\n  };\n\n  const handleAspectRatioChange = (newRatio) => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const videoHeight = videoRef.current.offsetHeight;\n    const newWidth = videoHeight * aspectRatios[newRatio];\n    setCropperSize({ width: newWidth, height: videoHeight });\n  };\n\n  return (\n    <>\n      <div className=\"video-container\" onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}>\n        <video\n          className=\"video\"\n          ref={videoRef}\n          src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n          onTimeUpdate={handleTimeUpdate}\n        />\n        {showCropper && <div\n          id=\"draggable\"\n          ref={cropperRef}\n          className=\"cropper\"\n          style={{\n            top: `${position.y}px`,\n            left: `${position.x}px`,\n            width: getVideoWidth(),\n            height: \"100%\",\n            aspectRatio: aspectRatio,\n          }}\n          onMouseDown={handleMouseDown}\n        />}\n      </div>\n      <div>\n        <button type=\"button\" onClick={isPlaying ? () => handlePause(videoRef) : () => handlePlay(videoRef)}>{isPlaying ? \"Pause\" : \"Play\"}</button>\n        <input type=\"range\" min=\"0\" max={videoRef.current ? videoRef.current.duration : 0} value={currentTime} onChange={(e) => {\n          videoRef.current.currentTime = e.target.value;\n          setCurrentTime(e.target.value);\n        }} />\n        <select value={playbackRate} onChange={(e) => setPlaybackRate(Number(e.target.value))}>\n          <option value={0.5}>0.5x</option>\n          <option value={1}>1x</option>\n          <option value={1.5}>1.5x</option>\n          <option value={2}>2x</option>\n        </select>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={volume}\n          onChange={(e) => setVolume(Number(e.target.value))}\n        />\n        <select value={aspectRatio} onChange={(e) => handleAspectRatioChange(e.target.value)}>\n          {Object.keys(aspectRatios).map((ratio) => (\n            <option value={ratio}>{ratio}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"w-1/3 ml-4\">\n        <div className=\"w-full\" style={{ aspectRatio: aspectRatio, overflow: 'hidden' }}>\n          <canvas\n            ref={previewCanvasRef}\n            className=\"w-full h-full object-cover\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VideoFlipper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}