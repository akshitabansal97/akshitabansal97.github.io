{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nconst useVideo = ({\n  videoRef\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  const handlePause = () => {\n    videoRef.current.pause();\n    setIsPlaying(false);\n  };\n  const handlePlay = () => {\n    videoRef.current.play();\n    setIsPlaying(true);\n  };\n  return {\n    videoRef,\n    handlePlay,\n    handlePause,\n    isPlaying,\n    playbackRate,\n    setPlaybackRate,\n    volume,\n    setVolume,\n    currentTime,\n    setCurrentTime\n  };\n};\n_s(useVideo, \"HdZUcFWfztuYWMOTY79IlJnnlNo=\");\nexport default useVideo;","map":{"version":3,"names":["useEffect","useRef","useState","useVideo","videoRef","_s","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","current","handlePause","pause","handlePlay","play"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/hooks/useVideo.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst useVideo = ({ videoRef }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  const handlePause = () => {\n    videoRef.current.pause();\n    setIsPlaying(false);\n  };\n\n  const handlePlay = () => {\n    videoRef.current.play();\n    setIsPlaying(true);\n  };\n\n  return { videoRef, handlePlay, handlePause, isPlaying, playbackRate, setPlaybackRate, volume, setVolume, currentTime, setCurrentTime };\n};\n\nexport default useVideo;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,IAAII,QAAQ,CAACU,OAAO,EAAE;MACpBV,QAAQ,CAACU,OAAO,CAACN,YAAY,GAAGA,YAAY;MAC5CJ,QAAQ,CAACU,OAAO,CAACJ,MAAM,GAAGA,MAAM;IAClC;EACF,CAAC,EAAE,CAACF,YAAY,EAAEJ,QAAQ,EAAEM,MAAM,CAAC,CAAC;EAEpC,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBX,QAAQ,CAACU,OAAO,CAACE,KAAK,CAAC,CAAC;IACxBT,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvBb,QAAQ,CAACU,OAAO,CAACI,IAAI,CAAC,CAAC;IACvBX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,OAAO;IAAEH,QAAQ;IAAEa,UAAU;IAAEF,WAAW;IAAET,SAAS;IAAEE,YAAY;IAAEC,eAAe;IAAEC,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAe,CAAC;AACxI,CAAC;AAACR,EAAA,CAxBIF,QAAQ;AA0Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}