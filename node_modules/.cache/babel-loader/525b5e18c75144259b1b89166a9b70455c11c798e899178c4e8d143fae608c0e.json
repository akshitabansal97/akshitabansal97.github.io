{"ast":null,"code":"var _jsxFileName = \"/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport RecordedPreview from \"./RecordedPreview\";\nimport Header from \"./header\";\nimport VideoFlipperContext from \"./context\";\nimport Preview from \"./preview\";\nimport Controls from \"./controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFlipper = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('editor');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [cropperSize, setCropperSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  console.log('recordedData', recordedData);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  useEffect(() => {\n    const updatePreview = () => {\n      if (showCropper && videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n        ctx.drawImage(video, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height);\n      }\n    };\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio, showCropper]);\n  const handleMouseUp = () => {\n    if (dragging) recordData({\n      x: position.x,\n      y: position.y\n    });\n    setDragging(false);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n  };\n  const recordData = ({\n    x = position.x,\n    y = position.y,\n    width = cropperSize.width,\n    height = cropperSize.width,\n    newVolume = volume,\n    newPlaybackRate = playbackRate\n  }) => {\n    const prevData = [...recordedData];\n    const lastEl = prevData.at(-1);\n    console.log('lastEl', lastEl);\n    const vwidth = getVideoWidth();\n    console.log('vwidth', vwidth, width);\n    const newData = {\n      timeStamp: currentTime,\n      coordinates: [x, y, width, height],\n      volume,\n      playbackRate\n    };\n    if (lastEl && lastEl.timeStamp === currentTime) {\n      prevData.pop();\n    }\n    setRecordedData([...prevData, newData]);\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n      setPosition({\n        x: newX,\n        y: newY\n      });\n    }\n  };\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n  const getCropperSize = ratio => {\n    const videoHeight = videoRef.current.offsetHeight;\n    const newWidth = videoHeight * aspectRatios[ratio];\n    return {\n      width: newWidth,\n      height: videoHeight\n    };\n  };\n  const handleAspectRatioChange = newRatio => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const {\n      width,\n      height\n    } = getCropperSize(newRatio);\n    setCropperSize({\n      width,\n      height\n    });\n    if (showCropper) recordData({\n      width,\n      height\n    });\n  };\n  const handleDownloadJSON = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordedData));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"recorded_data.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`;\n  };\n  const editorUi = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"video\",\n          ref: videoRef,\n          src: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\",\n          onTimeUpdate: handleTimeUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), showCropper && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"draggable\",\n          ref: cropperRef,\n          className: \"cropper\",\n          style: {\n            top: `${position.y}px`,\n            left: `${position.x}px`,\n            width: getVideoWidth(),\n            height: \"100%\",\n            aspectRatio: aspectRatio\n          },\n          onMouseDown: handleMouseDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n  const startCropper = () => {\n    setShowCropper(true);\n    const {\n      width,\n      height\n    } = getCropperSize(aspectRatio);\n    console.log(width, height);\n    recordData({\n      width,\n      height\n    });\n  };\n  const removeCropper = () => {\n    setShowCropper(false);\n  };\n  return /*#__PURE__*/_jsxDEV(VideoFlipperContext.Provider, {\n    value: {\n      activeTab,\n      handleTabClick,\n      videoRef,\n      aspectRatio,\n      previewCanvasRef,\n      showCropper,\n      position,\n      handleTimeUpdate,\n      recordData,\n      isPlaying,\n      currentTime,\n      setCurrentTime,\n      playbackRate,\n      setPlaybackRate,\n      volume,\n      setVolume,\n      handleAspectRatioChange,\n      handleDownloadJSON,\n      setIsPlaying,\n      handleMouseUp,\n      handleMouseDown,\n      handleMouseMove\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-top\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          activeTab: activeTab,\n          onTabClick: handleTabClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), activeTab === 'editor' ? editorUi() : /*#__PURE__*/_jsxDEV(RecordedPreview, {\n          recordedData: recordedData,\n          videoSrc: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: startCropper,\n          children: \"Start Cropper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: removeCropper,\n          children: \"Remove Cropper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDownloadJSON,\n          children: \"Generate Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFlipper, \"ffHzDSAdebWyYZYi6XdR+C9W8qg=\");\n_c = VideoFlipper;\nexport default VideoFlipper;\nvar _c;\n$RefreshReg$(_c, \"VideoFlipper\");","map":{"version":3,"names":["useEffect","useRef","useState","aspectRatios","RecordedPreview","Header","VideoFlipperContext","Preview","Controls","jsxDEV","_jsxDEV","VideoFlipper","_s","activeTab","setActiveTab","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","aspectRatio","setAspectRatio","showCropper","setShowCropper","recordedData","setRecordedData","cropperSize","setCropperSize","width","height","cropperRef","videoRef","previewCanvasRef","console","log","position","setPosition","x","y","dragging","setDragging","offset","setOffset","current","updatePreview","video","cropper","canvas","ctx","getContext","cropperRect","getBoundingClientRect","videoRect","scaleX","videoWidth","scaleY","videoHeight","sourceX","left","sourceY","top","sourceWidth","sourceHeight","drawImage","animationId","requestAnimationFrame","animate","cancelAnimationFrame","handleMouseUp","recordData","handleMouseDown","e","clientX","clientY","newVolume","newPlaybackRate","prevData","lastEl","at","vwidth","getVideoWidth","newData","timeStamp","coordinates","pop","handleMouseMove","container","box","newX","newY","handleTimeUpdate","getCropperSize","ratio","offsetHeight","newWidth","handleAspectRatioChange","newRatio","handleDownloadJSON","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleTabClick","tab","editorUi","className","children","onMouseMove","onMouseUp","onMouseLeave","ref","src","onTimeUpdate","fileName","_jsxFileName","lineNumber","columnNumber","id","style","onMouseDown","startCropper","removeCropper","Provider","value","onTabClick","videoSrc","type","onClick","_c","$RefreshReg$"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport RecordedPreview from \"./RecordedPreview\";\nimport Header from \"./header\";\nimport VideoFlipperContext from \"./context\";\nimport Preview from \"./preview\";\nimport Controls from \"./controls\";\n\nconst VideoFlipper = () => {\n  const [activeTab, setActiveTab] = useState('editor');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [cropperSize, setCropperSize] = useState({ width: 0, height: 0 });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n\n  console.log('recordedData', recordedData);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  useEffect(() => {\n    const updatePreview = () => {\n\n      if (showCropper && videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n\n        ctx.drawImage(\n          video,\n          sourceX, sourceY, sourceWidth, sourceHeight,\n          0, 0, canvas.width, canvas.height\n        );\n      }\n    };\n\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio, showCropper]);\n\n  const handleMouseUp = () => {\n    if (dragging) recordData({ x: position.x, y: position.y });\n    setDragging(false);\n    \n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const recordData = ({ x = position.x, y = position.y, width = cropperSize.width, height = cropperSize.width, newVolume = volume, newPlaybackRate = playbackRate }) => {\n    const prevData = [...recordedData];\n    const lastEl = prevData.at(-1);\n\n    console.log('lastEl', lastEl);\n    const vwidth = getVideoWidth();\n    console.log('vwidth', vwidth, width);\n    const newData = {\n      timeStamp: currentTime,\n      coordinates: [\n        x,\n        y,\n        width,\n        height\n      ],\n      volume,\n      playbackRate\n    };\n\n    if (lastEl && lastEl.timeStamp === currentTime) {\n      prevData.pop();\n    }\n\n    setRecordedData([...prevData, newData]);\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n\n      setPosition({ x: newX, y: newY });\n      \n    }\n  };\n\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n\n  const getCropperSize = (ratio) => {\n    const videoHeight = videoRef.current.offsetHeight;\n    const newWidth = videoHeight * aspectRatios[ratio];\n\n    return { width: newWidth, height: videoHeight };\n  }\n\n  const handleAspectRatioChange = (newRatio) => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const { width, height } = getCropperSize(newRatio);\n    setCropperSize({ width, height });\n    if (showCropper) recordData({ width, height });\n  };\n\n  const handleDownloadJSON = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordedData));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"recorded_data.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const getVideoWidth = () => {\n    return `${videoRef.current.getBoundingClientRect().height * aspectRatios[aspectRatio]}px`\n  };\n\n  const editorUi = () => (\n    <div className=\"editor-container\">\n      <div className=\"editor\">\n        <div className=\"video-container\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          <video\n            className=\"video\"\n            ref={videoRef}\n            src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n            onTimeUpdate={handleTimeUpdate}\n          />\n          {showCropper && <div\n            id=\"draggable\"\n            ref={cropperRef}\n            className=\"cropper\"\n            style={{\n              top: `${position.y}px`,\n              left: `${position.x}px`,\n              width: getVideoWidth(),\n              height: \"100%\",\n              aspectRatio: aspectRatio,\n            }}\n            onMouseDown={handleMouseDown}\n          />}\n        </div>\n        <Controls />\n      </div>\n      <Preview />\n    </div>\n  );\n\n  const startCropper = () => {\n    setShowCropper(true);\n    const { width, height } = getCropperSize(aspectRatio);\n    console.log(width, height);\n    recordData({ width, height });\n  };\n\n  const removeCropper = () => {\n    setShowCropper(false);\n  };\n\n  return (\n    <VideoFlipperContext.Provider value={{ \n      activeTab,\n      handleTabClick,\n      videoRef,\n      aspectRatio,\n      previewCanvasRef,\n      showCropper,\n      position,\n      handleTimeUpdate,\n      recordData,\n      isPlaying, currentTime, setCurrentTime, playbackRate, setPlaybackRate, volume, setVolume, handleAspectRatioChange, handleDownloadJSON, setIsPlaying, handleMouseUp, handleMouseDown, handleMouseMove\n    }}>\n      <div className=\"cropper-container\">\n        <div className=\"cropper-top\">\n          <Header activeTab={activeTab} onTabClick={handleTabClick} />\n          {activeTab === 'editor' ? editorUi() : <RecordedPreview recordedData={recordedData} videoSrc={\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"} />}\n        </div>\n        <div className=\"cropper-bottom\">\n          <button type=\"button\" onClick={startCropper}>Start Cropper</button>\n          <button type=\"button\" onClick={removeCropper}>Remove Cropper</button>\n          <button type=\"button\" onClick={handleDownloadJSON}>Generate Preview</button>\n        </div>\n      </div>\n    </VideoFlipperContext.Provider>\n  );\n};\n\nexport default VideoFlipper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}