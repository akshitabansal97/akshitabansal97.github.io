{"ast":null,"code":"var _jsxFileName = \"/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport RecordedPreview from \"./RecordedPreview\";\nimport Header from \"./header\";\nimport VideoFlipperContext from \"./context\";\nimport Preview from \"./preview\";\nimport Controls from \"./controls\";\nimport Editor from \"./editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFlipper = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('editor');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [cropperSize, setCropperSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n  useEffect(() => {\n    const updatePreview = () => {\n      console.log('previewCanvasRef', previewCanvasRef);\n      if (videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n        ctx.drawImage(video, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height);\n      }\n    };\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio]);\n  const handleMouseUp = () => {\n    if (dragging) recordData();\n    setDragging(false);\n  };\n  const handleMouseDown = e => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y\n    });\n  };\n  const recordData = () => {\n    const newData = {\n      timeStamp: currentTime,\n      coordinates: [position.x, position.y, cropperSize.width, cropperSize.height],\n      volume,\n      playbackRate\n    };\n    setRecordedData(prevData => [...prevData, newData]);\n  };\n  const handleMouseMove = e => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n      setPosition({\n        x: newX,\n        y: newY\n      });\n    }\n  };\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n  const handleAspectRatioChange = newRatio => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const videoHeight = videoRef.current.offsetHeight;\n    const newWidth = videoHeight * aspectRatios[newRatio];\n    setCropperSize({\n      width: newWidth,\n      height: videoHeight\n    });\n  };\n  const handleDownloadJSON = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordedData));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"recorded_data.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n  const handleTabClick = tab => {\n    setActiveTab(tab);\n  };\n  const editorUi = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n  const startCropper = () => {\n    setShowCropper(true);\n  };\n  const removeCropper = () => {\n    setShowCropper(false);\n  };\n  return /*#__PURE__*/_jsxDEV(VideoFlipperContext.Provider, {\n    value: {\n      activeTab,\n      handleTabClick,\n      videoRef,\n      aspectRatio,\n      previewCanvasRef,\n      showCropper,\n      position,\n      handleTimeUpdate,\n      isPlaying,\n      currentTime,\n      setCurrentTime,\n      playbackRate,\n      setPlaybackRate,\n      volume,\n      setVolume,\n      handleAspectRatioChange,\n      handleDownloadJSON,\n      setIsPlaying,\n      handleMouseUp,\n      handleMouseDown,\n      handleMouseMove\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-top\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          activeTab: activeTab,\n          onTabClick: handleTabClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), activeTab === 'editor' ? editorUi() : /*#__PURE__*/_jsxDEV(RecordedPreview, {\n          recordedData: recordedData,\n          videoSrc: \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: startCropper,\n          children: \"Start Cropper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: removeCropper,\n          children: \"Remove Cropper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {},\n          children: \"Generate Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFlipper, \"ffHzDSAdebWyYZYi6XdR+C9W8qg=\");\n_c = VideoFlipper;\nexport default VideoFlipper;\nvar _c;\n$RefreshReg$(_c, \"VideoFlipper\");","map":{"version":3,"names":["useEffect","useRef","useState","aspectRatios","RecordedPreview","Header","VideoFlipperContext","Preview","Controls","Editor","jsxDEV","_jsxDEV","VideoFlipper","_s","activeTab","setActiveTab","isPlaying","setIsPlaying","playbackRate","setPlaybackRate","volume","setVolume","currentTime","setCurrentTime","aspectRatio","setAspectRatio","showCropper","setShowCropper","recordedData","setRecordedData","cropperSize","setCropperSize","width","height","cropperRef","videoRef","previewCanvasRef","position","setPosition","x","y","dragging","setDragging","offset","setOffset","current","updatePreview","console","log","video","cropper","canvas","ctx","getContext","cropperRect","getBoundingClientRect","videoRect","scaleX","videoWidth","scaleY","videoHeight","sourceX","left","sourceY","top","sourceWidth","sourceHeight","drawImage","animationId","requestAnimationFrame","animate","cancelAnimationFrame","handleMouseUp","recordData","handleMouseDown","e","clientX","clientY","newData","timeStamp","coordinates","prevData","handleMouseMove","container","box","newX","newY","handleTimeUpdate","handleAspectRatioChange","newRatio","offsetHeight","newWidth","handleDownloadJSON","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","handleTabClick","tab","editorUi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startCropper","removeCropper","Provider","value","onTabClick","videoSrc","type","onClick","_c","$RefreshReg$"],"sources":["/Users/akshita/Downloads/vverse/videoflipper/src/VideoFlipper.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport './VideoFlipper.css';\nimport { aspectRatios } from \"./constant\";\nimport RecordedPreview from \"./RecordedPreview\";\nimport Header from \"./header\";\nimport VideoFlipperContext from \"./context\";\nimport Preview from \"./preview\";\nimport Controls from \"./controls\";\nimport Editor from \"./editor\";\n\nconst VideoFlipper = () => {\n  const [activeTab, setActiveTab] = useState('editor');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [aspectRatio, setAspectRatio] = useState(\"9:18\");\n  const [showCropper, setShowCropper] = useState(false);\n  const [recordedData, setRecordedData] = useState([]);\n  const [cropperSize, setCropperSize] = useState({ width: 0, height: 0 });\n  const cropperRef = useRef(null);\n  const videoRef = useRef(null);\n  const previewCanvasRef = useRef(null);\n\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [dragging, setDragging] = useState(false);\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n      videoRef.current.volume = volume;\n    }\n  }, [playbackRate, videoRef, volume]);\n\n  useEffect(() => {\n    const updatePreview = () => {\n      console.log('previewCanvasRef', previewCanvasRef);\n      if (videoRef.current && cropperRef.current && previewCanvasRef.current) {\n        const video = videoRef.current;\n        const cropper = cropperRef.current;\n        const canvas = previewCanvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        const cropperRect = cropper.getBoundingClientRect();\n        const videoRect = video.getBoundingClientRect();\n\n        const scaleX = video.videoWidth / videoRect.width;\n        const scaleY = video.videoHeight / videoRect.height;\n\n        const sourceX = (cropperRect.left - videoRect.left) * scaleX;\n        const sourceY = (cropperRect.top - videoRect.top) * scaleY;\n        const sourceWidth = cropperRect.width * scaleX;\n        const sourceHeight = cropperRect.height * scaleY;\n\n        canvas.width = cropperRect.width;\n        canvas.height = cropperRect.height;\n\n        ctx.drawImage(\n          video,\n          sourceX, sourceY, sourceWidth, sourceHeight,\n          0, 0, canvas.width, canvas.height\n        );\n      }\n    };\n\n    const animationId = requestAnimationFrame(function animate() {\n      updatePreview();\n      requestAnimationFrame(animate);\n    });\n\n    return () => cancelAnimationFrame(animationId);\n  }, [aspectRatio]);\n\n  const handleMouseUp = () => {\n    if (dragging) recordData();\n    setDragging(false);\n    \n  };\n\n  const handleMouseDown = (e) => {\n    setDragging(true);\n    // Get initial mouse position and box position\n    setOffset({\n      x: e.clientX - position.x,\n      y: e.clientY - position.y,\n    });\n  };\n\n  const recordData = () => {\n    const newData = {\n      timeStamp: currentTime,\n      coordinates: [\n        position.x,\n        position.y,\n        cropperSize.width,\n        cropperSize.height\n      ],\n      volume,\n      playbackRate\n    };\n    setRecordedData(prevData => [...prevData, newData]);\n  };\n\n  const handleMouseMove = (e) => {\n    if (dragging) {\n      const container = videoRef.current.getBoundingClientRect();\n      const box = cropperRef.current.getBoundingClientRect();\n\n      let newX = e.clientX - offset.x;\n      let newY = e.clientY - offset.y;\n\n      // Keep the box within container bounds\n      if (newX < 0) newX = 0;\n      if (newY < 0) newY = 0;\n      if (newX + box.width > container.width) newX = container.width - box.width;\n      if (newY + box.height > container.height) newY = container.height - box.height;\n\n      setPosition({ x: newX, y: newY });\n      \n    }\n  };\n\n  const handleTimeUpdate = () => {\n    setCurrentTime(videoRef.current.currentTime);\n  };\n\n  const handleAspectRatioChange = (newRatio) => {\n    setAspectRatio(newRatio);\n    // Update cropper size based on new aspect ratio\n    const videoHeight = videoRef.current.offsetHeight;\n    const newWidth = videoHeight * aspectRatios[newRatio];\n    setCropperSize({ width: newWidth, height: videoHeight });\n  };\n\n  const handleDownloadJSON = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(recordedData));\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"recorded_data.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const editorUi = () => (\n    <div className=\"editor-container\">\n      <div className=\"editor\">\n        <Editor />\n        <Controls />\n      </div>\n      <Preview />\n    </div>\n  );\n\n  const startCropper = () => {\n    setShowCropper(true);\n  };\n\n  const removeCropper = () => {\n    setShowCropper(false);\n  };\n\n  return (\n    <VideoFlipperContext.Provider value={{ \n      activeTab,\n      handleTabClick,\n      videoRef,\n      aspectRatio,\n      previewCanvasRef,\n      showCropper,\n      position,\n      handleTimeUpdate,\n      isPlaying, currentTime, setCurrentTime, playbackRate, setPlaybackRate, volume, setVolume, handleAspectRatioChange, handleDownloadJSON, setIsPlaying, handleMouseUp, handleMouseDown, handleMouseMove\n    }}>\n      <div className=\"cropper-container\">\n        <div className=\"cropper-top\">\n          <Header activeTab={activeTab} onTabClick={handleTabClick} />\n          {activeTab === 'editor' ? editorUi() : <RecordedPreview recordedData={recordedData} videoSrc={\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\"} />}\n        </div>\n        <div className=\"cropper-bottom\">\n          <button type=\"button\" onClick={startCropper}>Start Cropper</button>\n          <button type=\"button\" onClick={removeCropper}>Remove Cropper</button>\n          <button type=\"button\" onClick={() => {}}>Generate Preview</button>\n        </div>\n      </div>\n    </VideoFlipperContext.Provider>\n  );\n};\n\nexport default VideoFlipper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}